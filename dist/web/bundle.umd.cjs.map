{"version":3,"file":"bundle.umd.cjs","sources":["../../templates/components/common/description.js","../../templates/components/common/validator.js","../../templates/components/common/wrapper.js","../../templates/const.js","../../templates/components/params/params.js","../../templates/components/publishers/publishers.js","../../templates/components/subscribers/subscribers.js","../../templates/dom-helper.js","../../templates/ros.js","../../templates/unload.js","../../templates/utils.js"],"sourcesContent":["/**\n * DescriptionFieldへのテキスト表示用イベントリスナー\n **/\n\n// CSVファイルのキャッシュ\nglobalThis.jsonCache = {};\n\nasync function loadJsonFile(filepath) {\n  var filename = filepath.replace(\".csv\", \"\");\n\n  if (jsonCache[filename]) {\n    return jsonCache[filename];\n  }\n\n  try {\n    const res = await fetch(`/${filename}.json`);\n    const data = await res.json();\n    jsonCache[filename] = data;\n    return data;\n  } catch (e) {\n    console.error(\"Error loading JSON:\", e);\n    return null;\n  }\n}\n\nasync function updateDescription(payload) {\n  const { element, detail } = payload;\n  if (!detail) {\n    return;\n  }\n  const { rowId, csvFilename } = detail;\n  console.log(\"updateDescription\", detail);\n  if (!rowId) {\n    return;\n  }\n  if (!csvFilename) {\n    return;\n  }\n\n  const jsonData = await loadJsonFile(csvFilename);\n  if (!jsonData) {\n    console.error(\n      \"No description available: CSV file not found. This is caused by missing CSV file, failed to convert to JSON, or failed to load from cache.\"\n    );\n    return;\n  }\n\n  const rowData = jsonData.find((row) => row.id === rowId);\n  if (!rowData) {\n    console.error(\"No description available: Row not found\");\n    return;\n  }\n\n  // テキスト更新\n  // クラス名にdescription-fieldが指定されている要素を取得してテキストを更新する\n  const fields = element.querySelectorAll(\".description-field\");\n  fields.forEach((field) => {\n    field.textContent = rowData[field.dataset.columnName];\n  });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", (e) => {\n  var elements = document.getElementsByClassName(\"description\");\n  for (const el of elements) {\n    domUpdateHelper.registerCallback(el, updateDescription);\n\n    const eventName = el.dataset.eventName;\n    document.addEventListener(eventName, (event) => {\n      const payload = {\n        detail: event.detail,\n      };\n      domUpdateHelper.executeCallbacks(el, payload);\n    });\n  }\n});","/**\n * Validatorラッパー\n */\nfunction initValidator(inputElement, errorFieldElement) {\n  const name = inputElement.name;\n  const schema = global.schemas[name];\n  console.log(name, schema);\n  if (!schema) {\n    console.error(`No schema found for ${name}`);\n    return;\n  }\n  inputElement.addEventListener(\"input\", (event) => {\n    console.log(event);\n    const value = event.target.value;\n    const result = validate(value, schema);\n    if (result.valid) {\n      event.target.classList.remove(\"invalid\");\n      if (errorFieldElement) {\n        errorFieldElement.textContent = \"\";\n      }\n    } else {\n      event.target.classList.add(\"invalid\");\n      if (errorFieldElement) {\n        errorFieldElement.textContent = result.message;\n      }\n    }\n  });\n}\n\nfunction validate(value, schema) {\n  try {\n    schema.parse(value);\n    const result = {\n      valid: true,\n      message: \"\",\n    };\n    return result;\n  } catch (e) {\n    const errorMessage = error.errors[0]?.message || \"入力が無効です\";\n    const result = {\n      valid: false,\n      message: errorMessage,\n    };\n    return result;\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n  var elements = document.getElementsByClassName(\"validator-wrapper\");\n  for (const el of elements) {\n    // validator-wrapperはdivタグなので、このdivタグの子要素のinputタグを取得する\n    const inputElement = el.querySelector(\"input\");\n    // エラー表示フィールドがあれば、そこにバリデーションエラーメッセージを表示する\n    const errorFieldElement = el.querySelector(\".validation-error\");\n    if (!inputElement) {\n      console.error(\"No input element found in validator-wrapper\", el);\n      continue;\n    }\n    initValidator(inputElement, errorFieldElement);\n  }\n});","/**\n * イベントディスパッチャー追加のためのラッパーコンポーネント用関数\n */\n\nfunction dispatchWrappedEvent(originalEvent, customEventName) {\n  // イベントターゲットがevent-wrapperクラスを持っている場合はイベント発行を行わない\n  const target = originalEvent.target;\n  if (target.classList.contains(\"event-wrapper\")) {\n    return;\n  }\n  // // ラッパーコンポーネントに最も近いタグが持つdata-*を取得\n  // const isWrappedElement = target.closest(\".event-wrapper\") !== null;\n  // if (!isWrappedElement) return;\n\n  const detail = { ...target.dataset };\n  const customEvent = new CustomEvent(customEventName, {\n    bubbles: true,\n    detail,\n  });\n  document.dispatchEvent(customEvent);\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const clickWrappers = document.getElementsByClassName(\"click-wrapper\");\n  for(const wrapper of clickWrappers) {\n    const eventName = wrapper.dataset.eventName;\n    wrapper.addEventListener(\"click\", (e) => dispatchWrappedEvent(e, eventName));\n  }\n  const hoverWrappers = document.getElementsByClassName(\"hover-wrapper\");\n  for(const wrapper of hoverWrappers) {\n    const eventName = wrapper.dataset.eventName;\n    wrapper.addEventListener(\"mouseover\", (e) => dispatchWrappedEvent(e, eventName));\n  }\n  const leaveWrappers = document.getElementsByClassName(\"leave-wrapper\");\n  for(const wrapper of leaveWrappers) {\n    const eventName = wrapper.dataset.eventName;\n    wrapper.addEventListener(\"mouseout\", (e) => dispatchWrappedEvent(e, eventName));\n  }\n});","globalThis.MSG_TYPES = {\n  Bool: \"Bool:std_msgs\",\n  Int32: \"Int32:std_msgs\",\n  Int64: \"Int64:std_msgs\",\n  Float32: \"Float32:std_msgs\",\n  Float64: \"Float64:std_msgs\",\n  String: \"String:std_msgs\",\n  Transform: \"Transform:geometry_msgs\",\n  Pose: \"Pose:geometry_msgs\",\n  Image: \"Image:sensor_mags\",\n};\n\nglobalThis.PARAM_TYPES = {\n  Bool: \"Bool\",\n  Number: \"Number\",\n  String: \"String\",\n  Object: \"Object\",\n  Array: \"Array\",\n}\n\nglobalThis.ROS_EVENTS = {\n  Publish: \"Publish\", // { name, type, value },\n  Subscribe: \"Subscribe\", // { name, type },\n  SubscribedValue: \"SubscribedValue\", // { name, type, value },\n  Param: \"Param\", // { name, type },\n  ParamSet: \"ParamSet\", // { name, type, value },\n  ParamUpdated: \"ParamUpdated\", // { name, value },\n}","/**\n * ROS Parameters\n **/\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  /**\n   * ROSPARAMの必須属性\n   * - class=\"rosparam\"\n   * - name=\"[/param_name]\"\n   * - data-rtype=\"[PARAM_TYPES]\"\n   */\n  const paramElements = document.getElementsByClassName(\"rosparam\");\n  for (const element of paramElements) {\n    /**\n     * HTMLタグバリデータ\n     */\n    console.assert(element.getAttribute(\"name\") !== null, \"Parameterのname属性が必要です.\");\n    const name = element.getAttribute(\"name\");\n\n    /**\n     * ROSParamのポーリング登録\n     */\n    const event = new CustomEvent(ROS_EVENTS.Param, {\n      detail: { name },\n    });\n    document.dispatchEvent(event);\n\n    /**\n     * DOM更新方法の登録\n     */\n    if (element.hasAttribute(\"update-custom\")) {\n      // 特殊なコールバックが必要な場合は、update-custom属性を設定する\n      continue;\n    }\n\n    // rosparamのデータを受信した際のデフォルトDOM更新処理\n    domUpdateHelper.registerCallback(element, domUpdateHelper.updateElement);\n\n\n    /** ROSPARAM SETTER */\n    if (element.tagName === \"DIV\") {\n      const inputs = element.querySelectorAll(\"input\");\n      for (const input of inputs) {\n        input.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.value;\n          const key = e.currentTarget.getAttribute(\"data-key\");\n          const obj = await ROSInterface.getParam(name);\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.Object,\n              value: Utils.EvalSetValue(obj, key, value)\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      }\n    }\n\n    if (element.tagName === \"SELECT\") {\n      element.addEventListener(\"change\", async (e) => {\n        const value = e.currentTarget.value;\n        const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n          detail: {\n            name,\n            type: PARAM_TYPES.Number,\n            value\n          },\n        });\n        document.dispatchEvent(event);\n      });\n    }\n\n    if (element.tagName === \"INPUT\") {\n      if (element.type === \"checkbox\") {\n        element.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.checked;\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.Bool,\n              value\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      }\n      else if (element.type === \"radio\") {\n        element.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.value;\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.Number,\n              value\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      }\n      else if (element.type === \"text\") {\n        element.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.value;\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.String,\n              value\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      } else {\n        element.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.value;\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.Number,\n              value\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      }\n    }\n  }\n\n  /**\n   * DOM更新イベントの登録\n   */\n  document.addEventListener(ROS_EVENTS.ParamUpdated, async (e) => {\n    const { name, type, value } = e.detail;\n    const paramElements = document.getElementsByName(name);\n    paramElements.forEach((element) => {\n      domUpdateHelper.executeCallbacks(element, { type, value });\n    });\n  });\n});","/**\n * ROS PUBLISHER\n **/\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  /**\n   * Publisherの必須属性\n   * - class=\"publish\"\n   * - name=\"[/topic_name]\"\n   * - data-rtype=\"[MSG_TYPES]\"\n   * - value=\"[value]\"\n   */\n  const publishButtons = document.getElementsByClassName(\"publish\");\n  for (const btn of publishButtons) {\n    /**\n     * HTMLタグバリデータ\n     */\n    console.assert(btn.tagName === \"BUTTON\", \"PublisherはButtonエレメントにのみ限定する\");\n    console.assert(btn.getAttribute(\"name\") !== null, \"Publisherのname属性が必要です.\");\n    console.assert(btn.getAttribute(\"data-rtype\") in MSG_TYPES, `Publisherのdata-rtypeが不正です. ${btn.getAttribute(\"data-rtype\")}`);\n    if (btn.tagName !== \"BUTTON\") {\n      continue;\n    }\n\n    btn.addEventListener(\"click\", async (e) => {\n      const name = e.currentTarget.getAttribute(\"name\");\n      const type = MSG_TYPES[e.currentTarget.getAttribute(\"data-rtype\")];\n      const value = e.currentTarget.getAttribute(\"value\");\n\n      const event = new CustomEvent(ROS_EVENTS.Publish, {\n        detail: { name, type, value },\n      });\n      document.dispatchEvent(event);\n    });\n  }\n});","/**\n * ROS SUBSCRIBER\n **/\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  /**\n   * Subscriberの必須属性\n   *  - class=\"subscribe\"\n   *  - name=\"[/topic_name]\"\n   *  - data-rtype=\"[MSG_TYPES]\"\n   */\n  const subscribeElements = document.getElementsByClassName(\"subscribe\");\n  for (const element of subscribeElements) {\n    /**\n     * HTMLタグバリデータ\n     */\n    console.assert(element.getAttribute(\"name\") !== null, \"Subscriberのname属性が必要です.\");\n    console.assert(element.getAttribute(\"data-rtype\") in MSG_TYPES, `Subscriberのdata-rtypeが不正です. ${element.getAttribute(\"data-rtype\")}`);\n    const name = element.getAttribute(\"name\");\n    const type = MSG_TYPES[element.getAttribute(\"data-rtype\")];\n\n    /**\n     * SubscriberをROSに登録\n     */\n    const event = new CustomEvent(ROS_EVENTS.Subscribe, {\n      detail: { name, type },\n    });\n    document.dispatchEvent(event);\n\n    /**\n     * DOM更新方法の登録\n     */\n    if (element.hasAttribute(\"update-custom\")) {\n      // 特殊なDOM更新処理が必要な場合は、data-update-custom属性を設定する\n      continue;\n    }\n\n    // Subscribeしたデータを受信した際のデフォルトDOM更新処理\n    domUpdateHelper.registerCallback(element, domUpdateHelper.updateElement);\n  }\n\n  /**\n   * DOM更新イベントの登録\n   */\n  document.addEventListener(ROS_EVENTS.SubscribedValue, async (e) => {\n    const { name, type, value } = e.detail;\n    const topicElements = document.getElementsByName(name);\n    topicElements.forEach((element) => {\n      domUpdateHelper.executeCallbacks(element, { type, value });\n    });\n  });\n});","class DOMUpdateHelper {\n  constructor() {\n    this.updateCallbacks = new WeakMap();\n  }\n\n  /**\n   * DOM更新コールバックの登録\n   * @param {*} element\n   * @param {*} callback: ({ element, ...payload }) => { ... }\n   */\n  registerCallback(element, callback) {\n    if (this.updateCallbacks.has(element)) {\n      this.updateCallbacks.get(element).push(callback);\n    } else {\n      this.updateCallbacks.set(element, [callback]);\n    }\n  }\n\n  /**\n   * DOM更新コールバックの実行\n   * @param {*} element\n   * @param {*} payload\n   */\n  executeCallbacks(element, payload) {\n    if (this.updateCallbacks.has(element)) {\n      this.updateCallbacks.get(element).forEach((callback) => {\n        callback({ element, ...payload });\n      });\n    }\n  }\n\n  /**\n   * DOM更新コールバック\n   * @param {*} element \n   * @param {*} value \n   */\n  updateElement(element, value) {\n    switch (element.tagName) {\n      case \"DIV\":\n        updateDivElement(element, value);\n        break;\n      case \"SELECT\":\n        updateSelectElement(element, value);\n        break;\n      case \"INPUT\":\n        updateInputElement(element, value);\n        break;\n      case \"IMG\":\n        updateImageElement(element, value);\n      default:\n        throw new Error(`Unsupported element type: ${element.tagName}`);\n    }\n  }\n\n  updateDivElement(element, value) {\n    element.setAttribute(\"data-value\", value);\n\n    const inputs = element.querySelectorAll(\"input\");\n    for (const input of inputs) {\n      updateInputElement(input, Utils.EvalGetValue(value, input.getAttribute(\"data-key\")));\n    }\n  }\n\n  updateInputElement(element, value) {\n    if (element.type === \"checkbox\") {\n      element.checked = value;\n      return;\n    }\n    if (element.type === \"radio\") {\n      element.checked = element.value === value;\n      return;\n    }\n    element.value = value;\n    return;\n  }\n\n  updateSelectElement(element, value) {\n    const options = element.querySelectorAll(\"option\");\n    for (let i = 0; i < options.length; i++) {\n      options[i].selected = options[i].value === value;\n    }\n  }\n\n  updateImageElement(element, value) {\n    element.src = value;\n  }\n}\nglobalThis.domUpdateHelper = new DOMUpdateHelper();\n\n","document.addEventListener(\"DOMContentLoaded\", async () => {\n  /**\n   * ROS PUBLISHER\n   * カスタムイベントPublishEvent を購読して、ROSにPublishする\n   **/\n  document.addEventListener(ROS_EVENTS.Publish, async (e) => {\n    const { name, type, value } = e.detail;\n    eel.ros_publish(name, type, value);\n  });\n\n  /**\n   * ROS SUBSCRIBER\n   * カスタムイベントSubscribeEvent を購読して、ROSにSubscribeする\n   * サブスクライバーが受信したデータをカスタムイベントSubscribedValue で通知する\n   **/\n  document.addEventListener(ROS_EVENTS.Subscribe, async (e) => {\n    const { name, type } = e.detail;\n    eel.ros_subscribe(name, type);\n  });\n\n  /**\n   * ROS Parameters\n   * カスタムイベントParamEvent を購読して、ROSにパラメータを登録する\n   **/\n  document.addEventListener(ROS_EVENTS.Param, async (e) => {\n    const { name } = e.detail;\n    eel.ros_register_param(name);\n  });\n\n  /**\n   * ROS Parameters Setter\n   * カスタムイベントParamSet を購読して、ROSのパラメータを設定\n   */\n  document.addEventListener(ROS_EVENTS.ParamSet, async (e) => {\n    const { name, type, value } = e.detail;\n    eel.ros_set_param(name, type, value);\n  });\n\n  eel.expose(updateSubscribedValue);\n  function updateSubscribedValue(name, type, value) {\n\n    const event = new CustomEvent(ROS_EVENTS.SubscribedValue, {\n      detail: { name, type, value: to_jsvalue(type, value) },\n    });\n    document.dispatchEvent(event);\n  }\n\n  eel.expose(updateParam);\n  function updateParam(name, type, value) {\n    const event = new CustomEvent(ROS_EVENTS.ParamUpdated, {\n      detail: { name, type, value: to_jsvalue(type, value) },\n    });\n    document.dispatchEvent(event);\n  }\n\n  /**\n   * ヘルスチェック\n   */\n  eel.health(document.title);\n\n  eel.expose(health);\n  function health(value) {\n    console.log(\"[CA] Python -> JS: OK\");\n    return document.title + \": \" + value;\n  }\n});\n\nglobalThis.ROSInterface = {\n  getParam: async function(name) {\n    return await eel.ros_get_param(name);\n  }\n}\n\n// Python -> JS のWebSocket通信データは全てstringか配列stringで送られてくる\nfunction to_jsvalue(type, value){\n  if (type === MSG_TYPES.Float32) {\n    return parseFloat(value);\n  }\n  if (type === MSG_TYPES.Float64) {\n    return parseFloat(value);\n  }\n  if (type === MSG_TYPES.Int32) {\n    return parseInt(value);\n  }\n  if (type === MSG_TYPES.Int64) {\n    return parseInt(value);\n  }\n  if (type === MSG_TYPES.String) {\n    return value;\n  }\n  if (type === MSG_TYPES.Bool) {\n    return value === \"True\";\n  }\n  if (type === MSG_TYPES.Transform) {\n    return value.map(parseFloat);\n  }\n  if (type === MSG_TYPES.Pose) {\n    return value.map(parseFloat);\n  }\n  if (type === MSG_TYPES.Image) {\n    // base64string\n    return \"data:image/jpeg;base64,\" + value;\n  }\n  if (type === PARAM_TYPES.Bool) {\n    return value === \"True\";\n  }\n  if (type === PARAM_TYPES.Number) {\n    return parseFloat(value);\n  }\n  if (type === PARAM_TYPES.String) {\n    return value;\n  }\n  throw new Error(\"Unknown type: \" + type);\n}","/**\n * Unregister all ros pub/sub/params on unload page.\n **/\nwindow.addEventListener(\"unload\", async (e) => {\n  for (const element of publishButtons) {\n    eel.ros_unpublish(element.getAttribute(\"name\"));\n  }\n  for (const element of subscribeElements) {\n    eel.ros_unsubscribe(element.getAttribute(\"name\"));\n  }\n  for (const element of paramElements) {\n    eel.ros_unregister_param(element.getAttribute(\"name\"));\n  }\n});","globalThis.Utils = {\n  EvalGetValue: function(value, key) {\n    let v;\n    eval(\"v = value\" + key);\n    return v;\n  },\n  EvalSetValue: function(value, key, newValue) {\n    let v = structuredClone(value);\n    eval(\"v\" + key + \" = newValue\");\n    return v;\n  }\n}"],"names":["async","loadJsonFile","filepath","filename","replace","jsonCache","res","fetch","data","json","e","console","error","updateDescription","payload","element","detail","rowId","csvFilename","log","jsonData","rowData","find","row","id","querySelectorAll","forEach","field","textContent","dataset","columnName","initValidator","inputElement","errorFieldElement","name","schema","global","schemas","addEventListener","event","value","result","validate","target","valid","classList","remove","add","message","parse","_a","errors","dispatchWrappedEvent","originalEvent","customEventName","contains","customEvent","CustomEvent","bubbles","document","dispatchEvent","globalThis","MSG_TYPES","Bool","Int32","Int64","Float32","Float64","String","Transform","Pose","Image","PARAM_TYPES","Number","Object","Array","ROS_EVENTS","Publish","Subscribe","SubscribedValue","Param","ParamSet","ParamUpdated","elements","getElementsByClassName","el","domUpdateHelper","registerCallback","eventName","executeCallbacks","querySelector","clickWrappers","wrapper","hoverWrappers","leaveWrappers","paramElements","assert","getAttribute","hasAttribute","updateElement","tagName","inputs","input","currentTarget","key","obj","ROSInterface","getParam","type","Utils","EvalSetValue","checked","getElementsByName","publishButtons","btn","subscribeElements","DOMUpdateHelper","constructor","this","updateCallbacks","WeakMap","callback","has","get","push","set","updateDivElement","updateSelectElement","updateInputElement","updateImageElement","Error","setAttribute","EvalGetValue","options","i","length","selected","src","to_jsvalue","parseFloat","parseInt","map","eel","ros_publish","ros_subscribe","ros_register_param","ros_set_param","expose","health","title","ros_get_param","window","ros_unpublish","ros_unsubscribe","ros_unregister_param","v","eval","newValue","structuredClone"],"mappings":"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"}