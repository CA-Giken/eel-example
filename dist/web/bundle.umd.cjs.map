{"version":3,"file":"bundle.umd.cjs","sources":["../../templates/components/common/description.js","../../templates/components/common/validator.js","../../templates/const.js","../../templates/components/params/params.js","../../templates/components/publishers/publishers.js","../../templates/components/subscribers/subscribers.js","../../templates/dom-helper.js","../../templates/ros.js","../../templates/unload.js","../../templates/utils.js"],"sourcesContent":["/**\n * DescriptionFieldへのテキスト表示用イベントリスナー\n **/\n\n// CSVファイルのキャッシュ\nglobalThis.jsonCache = {};\n\nasync function loadJsonFile(filepath) {\n  var filename = filepath.replace(\".csv\", \"\");\n\n  if (global.jsonCache[filename]) {\n    return global.jsonCache[filename];\n  }\n\n  try {\n    const res = await fetch(`/${filename}.json`);\n    const data = await res.json();\n    global.jsonCache[filename] = data;\n    return data;\n  } catch (e) {\n    console.error(\"Error loading JSON:\", e);\n    return null;\n  }\n}\n\nasync function updateDescription(payload) {\n  const { element, detail } = payload;\n  if (!detail) {\n    return;\n  }\n  const { rowId, csvFilename } = detail;\n\n  if (!rowId) {\n    return;\n  }\n  if (!csvFilename) {\n    return;\n  }\n\n  const jsonData = await loadJsonFile(csvFilename);\n  if (!jsonData) {\n    console.error(\n      \"No description available: CSV file not found. This is caused by missing CSV file, failed to convert to JSON, or failed to load from cache.\"\n    );\n    return;\n  }\n\n  const rowData = jsonData.find((row) => row.id === rowId);\n  if (!rowData) {\n    console.error(\"No description available: Row not found\");\n    return;\n  }\n\n  // テキスト更新\n  // クラス名にdescription-fieldが指定されている要素を取得してテキストを更新する\n  const fields = element.querySelectorAll(\".description-field\");\n  fields.forEach((field) => {\n    field.textContent = rowData[field.dataset.columnName];\n  });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n  var elements = document.getElementsByClassName(\"description\");\n  for (const el of elements) {\n    domUpdateHelper.registerCallback(el, updateDescription);\n  }\n  document.addEventListener(\"UIDescriptionHover\", (event) => {\n    var elements = document.getElementsByClassName(\"description\");\n    for (const el of elements) {\n      domUpdateHelper.executeCallbacks(el, { detail: event.detail });\n    }\n  });\n});","/**\n * Validatorラッパー\n */\nfunction initValidator(inputElement, errorFieldElement) {\n  const name = inputElement.name;\n  const schema = global.schemas[name];\n  console.log(name, schema);\n  if (!schema) {\n    console.error(`No schema found for ${name}`);\n    return;\n  }\n  inputElement.addEventListener(\"input\", (event) => {\n    console.log(event);\n    const value = event.target.value;\n    const result = validate(value, schema);\n    if (result.valid) {\n      event.target.classList.remove(\"invalid\");\n      if (errorFieldElement) {\n        errorFieldElement.textContent = \"\";\n      }\n    } else {\n      event.target.classList.add(\"invalid\");\n      if (errorFieldElement) {\n        errorFieldElement.textContent = result.message;\n      }\n    }\n  });\n}\n\nfunction validate(value, schema) {\n  try {\n    schema.parse(value);\n    const result = {\n      valid: true,\n      message: \"\",\n    };\n    return result;\n  } catch (e) {\n    const errorMessage = error.errors[0]?.message || \"入力が無効です\";\n    const result = {\n      valid: false,\n      message: errorMessage,\n    };\n    return result;\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n  var elements = document.getElementsByClassName(\"validator-wrapper\");\n  for (const el of elements) {\n    // validator-wrapperはdivタグなので、このdivタグの子要素のinputタグを取得する\n    const inputElement = el.querySelector(\"input\");\n    // エラー表示フィールドがあれば、そこにバリデーションエラーメッセージを表示する\n    const errorFieldElement = el.querySelector(\".validation-error\");\n    if (!inputElement) {\n      console.error(\"No input element found in validator-wrapper\", el);\n      continue;\n    }\n    initValidator(inputElement, errorFieldElement);\n  }\n});","globalThis.MSG_TYPES = {\n  Bool: \"Bool:std_msgs\",\n  Int32: \"Int32:std_msgs\",\n  Int64: \"Int64:std_msgs\",\n  Float32: \"Float32:std_msgs\",\n  Float64: \"Float64:std_msgs\",\n  String: \"String:std_msgs\",\n  Transform: \"Transform:geometry_msgs\",\n  Pose: \"Pose:geometry_msgs\",\n  Image: \"Image:sensor_mags\",\n};\n\nglobalThis.PARAM_TYPES = {\n  Bool: \"Bool\",\n  Number: \"Number\",\n  String: \"String\",\n  Object: \"Object\",\n  Array: \"Array\",\n}\n\nglobalThis.ROS_EVENTS = {\n  Publish: \"Publish\", // { name, type, value },\n  Subscribe: \"Subscribe\", // { name, type },\n  SubscribedValue: \"SubscribedValue\", // { name, type, value },\n  Param: \"Param\", // { name, type },\n  ParamSet: \"ParamSet\", // { name, type, value },\n  ParamUpdated: \"ParamUpdated\", // { name, value },\n}","/**\n * ROS Parameters\n **/\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  /**\n   * ROSPARAMの必須属性\n   * - class=\"rosparam\"\n   * - name=\"[/param_name]\"\n   * - data-rtype=\"[PARAM_TYPES]\"\n   */\n  const paramElements = document.getElementsByClassName(\"rosparam\");\n  for (const element of paramElements) {\n    /**\n     * HTMLタグバリデータ\n     */\n    console.assert(element.getAttribute(\"name\") !== null, \"Parameterのname属性が必要です.\");\n    const name = element.getAttribute(\"name\");\n\n    /**\n     * ROSParamのポーリング登録\n     */\n    const event = new CustomEvent(ROS_EVENTS.Param, {\n      detail: { name },\n    });\n    document.dispatchEvent(event);\n\n    /**\n     * DOM更新方法の登録\n     */\n    if (element.hasAttribute(\"update-custom\")) {\n      // 特殊なコールバックが必要な場合は、update-custom属性を設定する\n      continue;\n    }\n\n    // rosparamのデータを受信した際のデフォルトDOM更新処理\n    domUpdateHelper.registerCallback(element, domUpdateHelper.updateElement);\n\n\n    /** ROSPARAM SETTER */\n    if (element.tagName === \"DIV\") {\n      const inputs = element.querySelectorAll(\"input\");\n      for (const input of inputs) {\n        input.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.value;\n          const key = e.currentTarget.getAttribute(\"data-key\");\n          const obj = await ROSInterface.getParam(name);\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.Object,\n              value: Utils.EvalSetValue(obj, key, value)\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      }\n    }\n\n    if (element.tagName === \"SELECT\") {\n      element.addEventListener(\"change\", async (e) => {\n        const value = e.currentTarget.value;\n        const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n          detail: {\n            name,\n            type: PARAM_TYPES.Number,\n            value\n          },\n        });\n        document.dispatchEvent(event);\n      });\n    }\n\n    if (element.tagName === \"INPUT\") {\n      if (element.type === \"checkbox\") {\n        element.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.checked;\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.Bool,\n              value\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      }\n      else if (element.type === \"radio\") {\n        element.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.value;\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.Number,\n              value\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      }\n      else if (element.type === \"text\") {\n        element.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.value;\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.String,\n              value\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      } else {\n        element.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.value;\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.Number,\n              value\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      }\n    }\n  }\n\n  /**\n   * DOM更新イベントの登録\n   */\n  document.addEventListener(ROS_EVENTS.ParamUpdated, async (e) => {\n    const { name, type, value } = e.detail;\n    const paramElements = document.getElementsByName(name);\n    paramElements.forEach((element) => {\n      domUpdateHelper.executeCallbacks(element, { type, value });\n    });\n  });\n});","/**\n * ROS PUBLISHER\n **/\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  /**\n   * Publisherの必須属性\n   * - class=\"publish\"\n   * - name=\"[/topic_name]\"\n   * - data-rtype=\"[MSG_TYPES]\"\n   * - value=\"[value]\"\n   */\n  const publishButtons = document.getElementsByClassName(\"publish\");\n  for (const btn of publishButtons) {\n    /**\n     * HTMLタグバリデータ\n     */\n    console.assert(btn.tagName === \"BUTTON\", \"PublisherはButtonエレメントにのみ限定する\");\n    console.assert(btn.getAttribute(\"name\") !== null, \"Publisherのname属性が必要です.\");\n    console.assert(btn.getAttribute(\"data-rtype\") in MSG_TYPES, `Publisherのdata-rtypeが不正です. ${btn.getAttribute(\"data-rtype\")}`);\n    if (btn.tagName !== \"BUTTON\") {\n      continue;\n    }\n\n    btn.addEventListener(\"click\", async (e) => {\n      const name = e.currentTarget.getAttribute(\"name\");\n      const type = MSG_TYPES[e.currentTarget.getAttribute(\"data-rtype\")];\n      const value = e.currentTarget.getAttribute(\"value\");\n\n      const event = new CustomEvent(ROS_EVENTS.Publish, {\n        detail: { name, type, value },\n      });\n      document.dispatchEvent(event);\n    });\n  }\n});","/**\n * ROS SUBSCRIBER\n **/\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  /**\n   * Subscriberの必須属性\n   *  - class=\"subscribe\"\n   *  - name=\"[/topic_name]\"\n   *  - data-rtype=\"[MSG_TYPES]\"\n   */\n  const subscribeElements = document.getElementsByClassName(\"subscribe\");\n  for (const element of subscribeElements) {\n    /**\n     * HTMLタグバリデータ\n     */\n    console.assert(element.getAttribute(\"name\") !== null, \"Subscriberのname属性が必要です.\");\n    console.assert(element.getAttribute(\"data-rtype\") in MSG_TYPES, `Subscriberのdata-rtypeが不正です. ${element.getAttribute(\"data-rtype\")}`);\n    const name = element.getAttribute(\"name\");\n    const type = MSG_TYPES[element.getAttribute(\"data-rtype\")];\n\n    /**\n     * SubscriberをROSに登録\n     */\n    const event = new CustomEvent(ROS_EVENTS.Subscribe, {\n      detail: { name, type },\n    });\n    document.dispatchEvent(event);\n\n    /**\n     * DOM更新方法の登録\n     */\n    if (element.hasAttribute(\"update-custom\")) {\n      // 特殊なDOM更新処理が必要な場合は、data-update-custom属性を設定する\n      continue;\n    }\n\n    // Subscribeしたデータを受信した際のデフォルトDOM更新処理\n    domUpdateHelper.registerCallback(element, domUpdateHelper.updateElement);\n  }\n\n  /**\n   * DOM更新イベントの登録\n   */\n  document.addEventListener(ROS_EVENTS.SubscribedValue, async (e) => {\n    const { name, type, value } = e.detail;\n    const topicElements = document.getElementsByName(name);\n    topicElements.forEach((element) => {\n      domUpdateHelper.executeCallbacks(element, { type, value });\n    });\n  });\n});","class DOMUpdateHelper {\n  constructor() {\n    this.updateCallbacks = new WeakMap();\n  }\n\n  /**\n   * DOM更新コールバックの登録\n   * @param {*} element\n   * @param {*} callback: ({ element, ...payload }) => { ... }\n   */\n  registerCallback(element, callback) {\n    if (this.updateCallbacks.has(element)) {\n      this.updateCallbacks.get(element).push(callback);\n    } else {\n      this.updateCallbacks.set(element, [callback]);\n    }\n  }\n\n  /**\n   * DOM更新コールバックの実行\n   * @param {*} element\n   * @param {*} payload\n   */\n  executeCallbacks(element, payload) {\n    if (this.updateCallbacks.has(element)) {\n      this.updateCallbacks.get(element).forEach((callback) => {\n        callback({ element, ...payload });\n      });\n    }\n  }\n\n  /**\n   * DOM更新コールバック\n   * @param {*} element \n   * @param {*} value \n   */\n  updateElement(element, value) {\n    switch (element.tagName) {\n      case \"DIV\":\n        updateDivElement(element, value);\n        break;\n      case \"SELECT\":\n        updateSelectElement(element, value);\n        break;\n      case \"INPUT\":\n        updateInputElement(element, value);\n        break;\n      case \"IMG\":\n        updateImageElement(element, value);\n      default:\n        throw new Error(`Unsupported element type: ${element.tagName}`);\n    }\n  }\n\n  updateDivElement(element, value) {\n    element.setAttribute(\"data-value\", value);\n\n    const inputs = element.querySelectorAll(\"input\");\n    for (const input of inputs) {\n      updateInputElement(input, Utils.EvalGetValue(value, input.getAttribute(\"data-key\")));\n    }\n  }\n\n  updateInputElement(element, value) {\n    if (element.type === \"checkbox\") {\n      element.checked = value;\n      return;\n    }\n    if (element.type === \"radio\") {\n      element.checked = element.value === value;\n      return;\n    }\n    element.value = value;\n    return;\n  }\n\n  updateSelectElement(element, value) {\n    const options = element.querySelectorAll(\"option\");\n    for (let i = 0; i < options.length; i++) {\n      options[i].selected = options[i].value === value;\n    }\n  }\n\n  updateImageElement(element, value) {\n    element.src = value;\n  }\n}\nglobalThis.domUpdateHelper = new DOMUpdateHelper();\n\n","document.addEventListener(\"DOMContentLoaded\", async () => {\n  /**\n   * ROS PUBLISHER\n   * カスタムイベントPublishEvent を購読して、ROSにPublishする\n   **/\n  document.addEventListener(ROS_EVENTS.Publish, async (e) => {\n    const { name, type, value } = e.detail;\n    eel.ros_publish(name, type, value);\n  });\n\n  /**\n   * ROS SUBSCRIBER\n   * カスタムイベントSubscribeEvent を購読して、ROSにSubscribeする\n   * サブスクライバーが受信したデータをカスタムイベントSubscribedValue で通知する\n   **/\n  document.addEventListener(ROS_EVENTS.Subscribe, async (e) => {\n    const { name, type } = e.detail;\n    eel.ros_subscribe(name, type);\n  });\n\n  /**\n   * ROS Parameters\n   * カスタムイベントParamEvent を購読して、ROSにパラメータを登録する\n   **/\n  document.addEventListener(ROS_EVENTS.Param, async (e) => {\n    const { name } = e.detail;\n    eel.ros_register_param(name);\n  });\n\n  /**\n   * ROS Parameters Setter\n   * カスタムイベントParamSet を購読して、ROSのパラメータを設定\n   */\n  document.addEventListener(ROS_EVENTS.ParamSet, async (e) => {\n    const { name, type, value } = e.detail;\n    eel.ros_set_param(name, type, value);\n  });\n\n  eel.expose(updateSubscribedValue);\n  function updateSubscribedValue(name, type, value) {\n\n    const event = new CustomEvent(ROS_EVENTS.SubscribedValue, {\n      detail: { name, type, value: to_jsvalue(type, value) },\n    });\n    document.dispatchEvent(event);\n  }\n\n  eel.expose(updateParam);\n  function updateParam(name, type, value) {\n    const event = new CustomEvent(ROS_EVENTS.ParamUpdated, {\n      detail: { name, type, value: to_jsvalue(type, value) },\n    });\n    document.dispatchEvent(event);\n  }\n\n  /**\n   * ヘルスチェック\n   */\n  eel.health(document.title);\n\n  eel.expose(health);\n  function health(value) {\n    console.log(\"[CA] Python -> JS: OK\");\n    return document.title + \": \" + value;\n  }\n});\n\nglobalThis.ROSInterface = {\n  getParam: async function(name) {\n    return await eel.ros_get_param(name);\n  }\n}\n\n// Python -> JS のWebSocket通信データは全てstringか配列stringで送られてくる\nfunction to_jsvalue(type, value){\n  if (type === MSG_TYPES.Float32) {\n    return parseFloat(value);\n  }\n  if (type === MSG_TYPES.Float64) {\n    return parseFloat(value);\n  }\n  if (type === MSG_TYPES.Int32) {\n    return parseInt(value);\n  }\n  if (type === MSG_TYPES.Int64) {\n    return parseInt(value);\n  }\n  if (type === MSG_TYPES.String) {\n    return value;\n  }\n  if (type === MSG_TYPES.Bool) {\n    return value === \"True\";\n  }\n  if (type === MSG_TYPES.Transform) {\n    return value.map(parseFloat);\n  }\n  if (type === MSG_TYPES.Pose) {\n    return value.map(parseFloat);\n  }\n  if (type === MSG_TYPES.Image) {\n    // base64string\n    return \"data:image/jpeg;base64,\" + value;\n  }\n  if (type === PARAM_TYPES.Bool) {\n    return value === \"True\";\n  }\n  if (type === PARAM_TYPES.Number) {\n    return parseFloat(value);\n  }\n  if (type === PARAM_TYPES.String) {\n    return value;\n  }\n  throw new Error(\"Unknown type: \" + type);\n}","/**\n * Unregister all ros pub/sub/params on unload page.\n **/\nwindow.addEventListener(\"unload\", async (e) => {\n  for (const element of publishButtons) {\n    eel.ros_unpublish(element.getAttribute(\"name\"));\n  }\n  for (const element of subscribeElements) {\n    eel.ros_unsubscribe(element.getAttribute(\"name\"));\n  }\n  for (const element of paramElements) {\n    eel.ros_unregister_param(element.getAttribute(\"name\"));\n  }\n});","globalThis.Utils = {\n  EvalGetValue: function(value, key) {\n    let v;\n    eval(\"v = value\" + key);\n    return v;\n  },\n  EvalSetValue: function(value, key, newValue) {\n    let v = structuredClone(value);\n    eval(\"v\" + key + \" = newValue\");\n    return v;\n  }\n}"],"names":["async","loadJsonFile","filepath","filename","replace","global","jsonCache","res","fetch","data","json","e","console","error","updateDescription","payload","element","detail","rowId","csvFilename","jsonData","rowData","find","row","id","querySelectorAll","forEach","field","textContent","dataset","columnName","initValidator","inputElement","errorFieldElement","name","schema","schemas","log","addEventListener","event","value","result","validate","target","valid","classList","remove","add","message","parse","_a","errors","globalThis","MSG_TYPES","Bool","Int32","Int64","Float32","Float64","String","Transform","Pose","Image","PARAM_TYPES","Number","Object","Array","ROS_EVENTS","Publish","Subscribe","SubscribedValue","Param","ParamSet","ParamUpdated","document","elements","getElementsByClassName","el","domUpdateHelper","registerCallback","executeCallbacks","querySelector","paramElements","assert","getAttribute","CustomEvent","dispatchEvent","hasAttribute","updateElement","tagName","inputs","input","currentTarget","key","obj","ROSInterface","getParam","type","Utils","EvalSetValue","checked","getElementsByName","publishButtons","btn","subscribeElements","DOMUpdateHelper","constructor","this","updateCallbacks","WeakMap","callback","has","get","push","set","updateDivElement","updateSelectElement","updateInputElement","updateImageElement","Error","setAttribute","EvalGetValue","options","i","length","selected","src","to_jsvalue","parseFloat","parseInt","map","eel","ros_publish","ros_subscribe","ros_register_param","ros_set_param","expose","health","title","ros_get_param","window","ros_unpublish","ros_unsubscribe","ros_unregister_param","v","eval","newValue","structuredClone"],"mappings":"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"}