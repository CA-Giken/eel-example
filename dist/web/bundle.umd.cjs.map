{"version":3,"file":"bundle.umd.cjs","sources":["../../templates/components/common/description.js","../../templates/components/common/validator.js","../../templates/components/common/wrapper.js","../../templates/const.js","../../templates/utils.js","../../templates/ros.js","../../templates/components/params/params.js","../../templates/components/publishers/publishers.js","../../templates/components/subscribers/subscribers.js","../../templates/dom-helper.js","../../templates/ros_entrypoints.js","../../templates/unload.js"],"sourcesContent":["/**\n * DescriptionFieldへのテキスト表示用イベントリスナー\n **/\n\n// CSVファイルのキャッシュ\nglobalThis.jsonCache = {};\n\nasync function loadJsonFile(filepath) {\n  var filename = filepath.replace(\".csv\", \"\");\n\n  if (jsonCache[filename]) {\n    return jsonCache[filename];\n  }\n\n  try {\n    const res = await fetch(`/${filename}.json`);\n    const data = await res.json();\n    jsonCache[filename] = data;\n    return data;\n  } catch (e) {\n    console.error(\"Error loading JSON:\", e);\n    return null;\n  }\n}\n\nasync function updateDescription(payload) {\n  const { element, detail } = payload;\n  if (!detail) {\n    return;\n  }\n  const { rowId, csvFilename } = detail;\n  console.log(\"updateDescription\", detail);\n  if (!rowId) {\n    return;\n  }\n  if (!csvFilename) {\n    return;\n  }\n\n  const jsonData = await loadJsonFile(csvFilename);\n  if (!jsonData) {\n    console.error(\n      \"No description available: CSV file not found. This is caused by missing CSV file, failed to convert to JSON, or failed to load from cache.\"\n    );\n    return;\n  }\n\n  const rowData = jsonData.find((row) => row.id === rowId);\n  if (!rowData) {\n    console.error(\"No description available: Row not found\");\n    return;\n  }\n\n  // テキスト更新\n  // クラス名にdescription-fieldが指定されている要素を取得してテキストを更新する\n  const fields = element.querySelectorAll(\".description-field\");\n  fields.forEach((field) => {\n    field.textContent = rowData[field.dataset.columnName];\n  });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", (e) => {\n  var elements = document.getElementsByClassName(\"description\");\n  for (const el of elements) {\n    domUpdateHelper.registerCallback(el, updateDescription);\n\n    const eventName = el.dataset.eventName;\n    document.addEventListener(eventName, (event) => {\n      const payload = {\n        detail: event.detail,\n      };\n      domUpdateHelper.executeCallbacks(el, payload);\n    });\n  }\n});","/**\n * Validatorラッパー\n */\nfunction initValidator(inputElement, errorFieldElement) {\n  const name = inputElement.name;\n  const schema = global.schemas[name];\n  console.log(name, schema);\n  if (!schema) {\n    console.error(`No schema found for ${name}`);\n    return;\n  }\n  inputElement.addEventListener(\"input\", (event) => {\n    console.log(event);\n    const value = event.target.value;\n    const result = validate(value, schema);\n    if (result.valid) {\n      event.target.classList.remove(\"invalid\");\n      if (errorFieldElement) {\n        errorFieldElement.textContent = \"\";\n      }\n    } else {\n      event.target.classList.add(\"invalid\");\n      if (errorFieldElement) {\n        errorFieldElement.textContent = result.message;\n      }\n    }\n  });\n}\n\nfunction validate(value, schema) {\n  try {\n    schema.parse(value);\n    const result = {\n      valid: true,\n      message: \"\",\n    };\n    return result;\n  } catch (e) {\n    const errorMessage = error.errors[0]?.message || \"入力が無効です\";\n    const result = {\n      valid: false,\n      message: errorMessage,\n    };\n    return result;\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n  var elements = document.getElementsByClassName(\"validator-wrapper\");\n  for (const el of elements) {\n    // validator-wrapperはdivタグなので、このdivタグの子要素のinputタグを取得する\n    const inputElement = el.querySelector(\"input\");\n    // エラー表示フィールドがあれば、そこにバリデーションエラーメッセージを表示する\n    const errorFieldElement = el.querySelector(\".validation-error\");\n    if (!inputElement) {\n      console.error(\"No input element found in validator-wrapper\", el);\n      continue;\n    }\n    initValidator(inputElement, errorFieldElement);\n  }\n});","/**\n * イベントディスパッチャー追加のためのラッパーコンポーネント用関数\n */\n\nfunction dispatchWrappedEvent(originalEvent, customEventName) {\n  // イベントターゲットがevent-wrapperクラスを持っている場合はイベント発行を行わない\n  const target = originalEvent.target;\n  if (target.classList.contains(\"event-wrapper\")) {\n    return;\n  }\n  // // ラッパーコンポーネントに最も近いタグが持つdata-*を取得\n  // const isWrappedElement = target.closest(\".event-wrapper\") !== null;\n  // if (!isWrappedElement) return;\n\n  const detail = { ...target.dataset };\n  const customEvent = new CustomEvent(customEventName, {\n    bubbles: true,\n    detail,\n  });\n  document.dispatchEvent(customEvent);\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const clickWrappers = document.getElementsByClassName(\"click-wrapper\");\n  for(const wrapper of clickWrappers) {\n    const eventName = wrapper.dataset.eventName;\n    wrapper.addEventListener(\"click\", (e) => dispatchWrappedEvent(e, eventName));\n  }\n  const hoverWrappers = document.getElementsByClassName(\"hover-wrapper\");\n  for(const wrapper of hoverWrappers) {\n    const eventName = wrapper.dataset.eventName;\n    wrapper.addEventListener(\"mouseover\", (e) => dispatchWrappedEvent(e, eventName));\n  }\n  const leaveWrappers = document.getElementsByClassName(\"leave-wrapper\");\n  for(const wrapper of leaveWrappers) {\n    const eventName = wrapper.dataset.eventName;\n    wrapper.addEventListener(\"mouseout\", (e) => dispatchWrappedEvent(e, eventName));\n  }\n});","globalThis.PARAM_TYPES = {\n  Bool: \"Bool\",\n  Number: \"Number\",\n  String: \"String\",\n  Object: \"Object\",\n  Array: \"Array\",\n}\n\nglobalThis.ROS_EVENTS = {\n  Publish: \"Publish\", // { name, type, value },\n  Subscribe: \"Subscribe\", // { name, type },\n  SubscribedValue: \"SubscribedValue\", // { name, value },\n  Param: \"Param\", // { name },\n  ParamSet: \"ParamSet\", // { name, type, value },\n  ParamUpdated: \"ParamUpdated\", // { name, value },\n}","globalThis.Utils = {\n  EvalGetValue: function(value, key) {\n    let v;\n    eval(\"v = value\" + key);\n    return v;\n  },\n  EvalSetValue: function(value, key, newValue) {\n    let v = structuredClone(value);\n    eval(\"v\" + key + \" = newValue\");\n    return v;\n  },\n  /**\n   * 辞書キーのフルパス指定して値追加\n   * @param {*} dict \n   * @param {*} key: .options.data.meta[0] のようなフルパス\n   * @param {*} value \n   * @returns dict\n   */\n  dictFullPathAdd: function(dict, key_fullpath, value) {\n    let result = structuredClone(dict);\n    let current = result;\n    // 一番最初の.は無視\n    if (key_fullpath.startsWith('.')) {\n      key_fullpath = key_fullpath.slice(1);\n    }\n\n    // パスを分割して階層構造を作成\n    const pathParts = key_fullpath.split('.');\n\n    pathParts.forEach((part, index) => {\n      // 配列のインデックスを処理\n      const arrayMatch = part.match(/(\\w+)\\[(\\d+)\\]/);\n\n      if (arrayMatch) {\n        // 配列の場合\n        const [_, arrayName, arrayIndex] = arrayMatch;\n        if (!current[arrayName]) {\n          current[arrayName] = [];\n        }\n\n        if (index === pathParts.length - 1) {\n          // 最後の要素の場合は値を設定\n          current[arrayName][arrayIndex] = value;\n        } else {\n          // 途中の要素の場合は空オブジェクトを作成\n          if (!current[arrayName][arrayIndex]) {\n            current[arrayName][arrayIndex] = {};\n          }\n          current = current[arrayName][arrayIndex];\n        }\n      } else {\n        // 通常のオブジェクトの場合\n        if (index === pathParts.length - 1) {\n          // 最後の要素の場合は値を設定\n          current[part] = value;\n        } else {\n          // 途中の要素の場合は空オブジェクトを作成\n          if (!current[part]) {\n            current[part] = {};\n          }\n          current = current[part];\n        }\n      }\n    });\n\n    return result;\n  }\n}","document.addEventListener(\"DOMContentLoaded\", async () => {\n  /**\n   * ROS PUBLISHER\n   * カスタムイベントPublishEvent を購読して、ROSにPublishする\n   **/\n  document.addEventListener(ROS_EVENTS.Publish, async (e) => {\n    const { name, type, value } = e.detail;\n    console.debug(`[CA] Publish: ${name} (${type}, ${value})`);\n    eel.ros_publish(name, type, value);\n  });\n\n  /**\n   * ROS SUBSCRIBER\n   * カスタムイベントSubscribeEvent を購読して、ROSにSubscribeする\n   * サブスクライバーが受信したデータをカスタムイベントSubscribedValue で通知する\n   **/\n  document.addEventListener(ROS_EVENTS.Subscribe, async (e) => {\n    const { name, type } = e.detail;\n    console.debug(`[CA] Subscribe: ${name} (${type})`);\n    eel.ros_subscribe(name, type);\n  });\n\n  /**\n   * ROS Parameters\n   * カスタムイベントParamEvent を購読して、ROSにパラメータを登録する\n   **/\n  document.addEventListener(ROS_EVENTS.Param, async (e) => {\n    const { name } = e.detail;\n    console.debug(`[CA] Param: ${name}`);\n    eel.ros_register_param(name);\n  });\n\n  /**\n   * ROS Parameters Setter\n   * カスタムイベントParamSet を購読して、ROSのパラメータを設定\n   */\n  document.addEventListener(ROS_EVENTS.ParamSet, async (e) => {\n    const { name, type, value } = e.detail;\n    console.debug(`[CA] ParamSet: ${name} (${type}, ${value})`);\n    eel.ros_set_param(name, type, value);\n  });\n\n  /**\n   * ヘルスチェック\n  */\n  eel.health(document.title);\n});\n\n\nglobalThis.ROSInterface = {\n  getParam: async function(name) {\n    return await eel.ros_get_param(name);\n  }\n}\n\n","/**\n * ROS Parameters\n **/\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  /**\n   * ROSPARAMの必須属性\n   * - class=\"rosparam\"\n   * - name=\"[/param_name]\"\n   * - data-rtype=\"[PARAM_TYPES]\"\n   */\n  const paramElements = document.getElementsByClassName(\"rosparam\");\n  for (const element of paramElements) {\n    /**\n     * HTMLタグバリデータ\n     */\n    console.assert(element.getAttribute(\"name\") !== null, \"Parameterのname属性が必要です.\");\n    const name = element.getAttribute(\"name\");\n\n    /**\n     * ROSParamのポーリング登録\n     */\n    const event = new CustomEvent(ROS_EVENTS.Param, {\n      detail: { name },\n    });\n    document.dispatchEvent(event);\n\n    /**\n     * DOM更新方法の登録\n     */\n    if (element.hasAttribute(\"update-custom\")) {\n      // 特殊なコールバックが必要な場合は、update-custom属性を設定する\n      continue;\n    }\n\n    // rosparamのデータを受信した際のデフォルトDOM更新処理\n    domUpdateHelper.registerCallback(element, domUpdateHelper.updateElement);\n\n\n    /** ROSPARAM SETTER */\n    if (element.tagName === \"DIV\") {\n      const inputs = element.querySelectorAll(\"input\");\n      for (const input of inputs) {\n        input.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.value;\n          const key = e.currentTarget.getAttribute(\"data-key\");\n          const obj = await ROSInterface.getParam(name);\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.Object,\n              value: Utils.EvalSetValue(obj, key, value)\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      }\n    }\n\n    if (element.tagName === \"SELECT\") {\n      element.addEventListener(\"change\", async (e) => {\n        const value = e.currentTarget.value;\n        const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n          detail: {\n            name,\n            type: PARAM_TYPES.Number,\n            value\n          },\n        });\n        document.dispatchEvent(event);\n      });\n    }\n\n    if (element.tagName === \"INPUT\") {\n      if (element.type === \"checkbox\") {\n        element.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.checked;\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.Bool,\n              value\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      }\n      else if (element.type === \"radio\") {\n        element.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.value;\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.Number,\n              value\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      }\n      else if (element.type === \"text\") {\n        element.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.value;\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.String,\n              value\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      } else {\n        element.addEventListener(\"change\", async (e) => {\n          const value = e.currentTarget.value;\n          const event = new CustomEvent(ROS_EVENTS.ParamSet, {\n            detail: {\n              name,\n              type: PARAM_TYPES.Number,\n              value\n            },\n          });\n          document.dispatchEvent(event);\n        });\n      }\n    }\n  }\n\n  /**\n   * DOM更新イベントの登録\n   */\n  document.addEventListener(ROS_EVENTS.ParamUpdated, async (e) => {\n    const { name, type, value } = e.detail;\n    const paramElements = document.getElementsByName(name);\n    paramElements.forEach((element) => {\n      domUpdateHelper.executeCallbacks(element, { type, value });\n    });\n  });\n});","/**\n * ROS PUBLISHER\n **/\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  /**\n   * Publisherの必須属性\n   * - class=\"publish\"\n   * - name=\"[/topic_name]\"\n   * - ext=\"ROS_MESSAGE\"\n   * - value=\"[value]\"\n   */\n  const publishes = document.getElementsByClassName(\"publish\");\n  for (const pub of publishes) {\n    /**\n     * HTMLタグバリデータ\n     */\n    const name = pub.getAttribute(\"name\");\n    console.assert(name, \"Publisherのname属性が必要です\");\n    const type = pub.getAttribute(\"m-type\");\n    console.assert(type, `Publisherのext属性が必要です`);\n    console.assert(pub.tagName === \"DIV\", \"PublisherはDIVタグである必要があります\");\n    if (pub.tagName !== \"DIV\") {\n      continue;\n    }\n    const btn = pub.querySelector(\"button\");\n    console.assert(btn, \"Publisherはbuttonタグを含む必要があります\");\n    const inputs = pub.querySelectorAll(\"input\");\n    console.assert(inputs.length > 0, \"Publisherはinputタグを含む必要があります\");\n\n\n    btn.addEventListener(\"click\", async (e) => {\n      let value = {};\n      // inputタグのvalueを取得して辞書化\n      inputs.forEach((input) => {\n        const ext = input.getAttribute(\"ext\");\n        if (!ext) return;\n        var type_asserted;\n        if(input.type == \"checkbox\"){\n          type_asserted = input.checked;\n        } else if(input.type == \"number\"){\n          type_asserted = Number(input.value);\n        } else if(input.type == \"radio\"){\n          type_asserted = Number(input.value);\n        } else {\n          type_asserted = input.value;\n        }\n        value = Utils.dictFullPathAdd(value, ext, type_asserted);\n      });\n      const event = new CustomEvent(ROS_EVENTS.Publish, {\n        detail: { name, type, value },\n      });\n      document.dispatchEvent(event);\n    });\n  }\n});","/**\n * ROS SUBSCRIBER\n **/\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  /**\n   * Subscriberの必須属性\n   *  - class=\"subscribe\"\n   *  - name=\"[/topic_name]\"\n   *  - data-rtype=\"[MSG_TYPES]\"\n   */\n  const subscribeElements = document.getElementsByClassName(\"subscribe\");\n  for (const element of subscribeElements) {\n    /**\n     * HTMLタグバリデータ\n     */\n    const name = element.getAttribute(\"name\");\n    console.assert(name, \"Subscriberのname属性が必要です.\");\n    const type = element.getAttribute(\"m-type\");\n    console.assert(type, \"Subscriberのm-type属性が必要です.\");\n    console.assert(element.tagName === \"DIV\", \"SubscriberはDIVタグである必要があります.\");\n    if (element.tagName !== \"DIV\") {\n      continue;\n    }\n\n    /**\n     * SubscriberをROSに登録\n     */\n    const event = new CustomEvent(ROS_EVENTS.Subscribe, {\n      detail: { name, type },\n    });\n    document.dispatchEvent(event);\n\n    /**\n     * DOM更新方法の登録\n     */\n    if (element.hasAttribute(\"update-custom\")) {\n      // 特殊なDOM更新処理が必要な場合は、data-update-custom属性を設定する\n      continue;\n    }\n\n    // Subscribeしたデータを受信した際のデフォルトDOM更新処理\n    domUpdateHelper.registerCallback(element, domUpdateHelper.updateElement);\n  }\n\n  /**\n   * DOM更新イベントの登録\n   */\n  document.addEventListener(ROS_EVENTS.SubscribedValue, async (e) => {\n    const { name, value } = e.detail;\n    const topicElements = document.getElementsByName(name);\n    topicElements.forEach((element) => {\n      domUpdateHelper.executeCallbacks(element, { value });\n    });\n  });\n});","class DOMUpdateHelper {\n  constructor() {\n    this.updateCallbacks = new WeakMap();\n  }\n\n  /**\n   * DOM更新コールバックの登録\n   * @param {*} element\n   * @param {*} callback: ({ element, ...payload }) => { ... }\n   */\n  registerCallback(element, callback) {\n    if (this.updateCallbacks.has(element)) {\n      this.updateCallbacks.get(element).push(callback);\n    } else {\n      this.updateCallbacks.set(element, [callback]);\n    }\n  }\n\n  /**\n   * DOM更新コールバックの実行\n   * @param {*} element\n   * @param {*} payload\n   */\n  executeCallbacks(element, payload) {\n    if (this.updateCallbacks.has(element)) {\n      this.updateCallbacks.get(element).forEach((callback) => {\n        callback({ element, ...payload });\n      });\n    }\n  }\n\n  /**\n   * DOM更新コールバック\n   * @param {*} element \n   * @param {*} value \n   */\n  updateElement(element, value) {\n    switch (element.tagName) {\n      case \"DIV\":\n        updateDivElement(element, value);\n        break;\n      case \"SELECT\":\n        updateSelectElement(element, value);\n        break;\n      case \"INPUT\":\n        updateInputElement(element, value);\n        break;\n      case \"IMG\":\n        updateImageElement(element, value);\n      default:\n        throw new Error(`Unsupported element type: ${element.tagName}`);\n    }\n  }\n\n  updateDivElement(element, value) {\n    element.setAttribute(\"data-value\", value);\n\n    const children = element.children;\n    for (const child of children) {\n      // ext属性を持つ子要素のみ再帰探索\n      if (!child.hasAttribute(\"ext\")) continue;\n      updateElement(child, Utils.EvalGetValue(value, child.getAttribute(\"ext\")));\n    }\n  }\n\n  updateInputElement(element, value) {\n    if (element.type === \"checkbox\") {\n      element.checked = value;\n      return;\n    }\n    if (element.type === \"radio\") {\n      element.checked = element.value === value;\n      return;\n    }\n    element.value = value;\n    return;\n  }\n\n  updateSelectElement(element, value) {\n    const options = element.querySelectorAll(\"option\");\n    for (let i = 0; i < options.length; i++) {\n      options[i].selected = options[i].value === value;\n    }\n  }\n\n  updateImageElement(element, value) {\n    element.src = value;\n  }\n}\nglobalThis.domUpdateHelper = new DOMUpdateHelper();\n\n","globalThis.eelEntrypoints = {\n  updateSubscribedValue: function(name, value) {\n    const event = new CustomEvent(ROS_EVENTS.SubscribedValue, {\n      detail: { name, value },\n    });\n    document.dispatchEvent(event);\n  },\n  updateParam: function(name, type, value) {\n    const event = new CustomEvent(ROS_EVENTS.ParamUpdated, {\n      detail: { name, type, value },\n    });\n    document.dispatchEvent(event);\n  },\n  health: function(value) {\n    console.log(\"[CA] Python -> JS: OK\");\n    return document.title + \": \" + value;\n  }\n}\n\neel.expose(eelEntrypoints.updateSubscribedValue, \"updateSubscribedValue\");\neel.expose(eelEntrypoints.updateParam, \"updateParam\");\neel.expose(eelEntrypoints.health, \"health\");","/**\n * Unregister all ros pub/sub/params on unload page.\n **/\nwindow.addEventListener(\"unload\", async (e) => {\n  for (const element of publishButtons) {\n    eel.ros_unpublish(element.getAttribute(\"name\"));\n  }\n  for (const element of subscribeElements) {\n    eel.ros_unsubscribe(element.getAttribute(\"name\"));\n  }\n  for (const element of paramElements) {\n    eel.ros_unregister_param(element.getAttribute(\"name\"));\n  }\n});"],"names":["async","loadJsonFile","filepath","filename","replace","jsonCache","res","fetch","data","json","e","console","error","updateDescription","payload","element","detail","rowId","csvFilename","log","jsonData","rowData","find","row","id","querySelectorAll","forEach","field","textContent","dataset","columnName","initValidator","inputElement","errorFieldElement","name","schema","global","schemas","addEventListener","event","value","result","validate","target","valid","classList","remove","add","message","parse","_a","errors","dispatchWrappedEvent","originalEvent","customEventName","contains","customEvent","CustomEvent","bubbles","document","dispatchEvent","globalThis","PARAM_TYPES","Bool","Number","String","Object","Array","ROS_EVENTS","Publish","Subscribe","SubscribedValue","Param","ParamSet","ParamUpdated","Utils","EvalGetValue","key","v","eval","EvalSetValue","newValue","structuredClone","dictFullPathAdd","dict","key_fullpath","current","startsWith","slice","pathParts","split","part","index","arrayMatch","match","_","arrayName","arrayIndex","length","type","debug","eel","ros_publish","ros_subscribe","ros_register_param","ros_set_param","health","title","ROSInterface","getParam","ros_get_param","elements","getElementsByClassName","el","domUpdateHelper","registerCallback","eventName","executeCallbacks","querySelector","clickWrappers","wrapper","hoverWrappers","leaveWrappers","paramElements","assert","getAttribute","hasAttribute","updateElement","tagName","inputs","input","currentTarget","obj","checked","getElementsByName","publishes","pub","btn","ext","type_asserted","subscribeElements","DOMUpdateHelper","constructor","this","updateCallbacks","WeakMap","callback","has","get","push","set","updateDivElement","updateSelectElement","updateInputElement","updateImageElement","Error","setAttribute","children","child","options","i","selected","src","eelEntrypoints","updateSubscribedValue","updateParam","expose","window","publishButtons","ros_unpublish","ros_unsubscribe","ros_unregister_param"],"mappings":"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"}